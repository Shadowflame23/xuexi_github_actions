name: Test, Build, Push

env:
  APP_NAME: xuexigithubactions
  VERSION: ${{ github.run_number }}
  NODE_VERSION: 16

on:
  workflow_dispatch:
    inputs:
      buildEnvironment:
        description: "Build Environment"
        required: false
        type: choice
        options:
          - dev
          - stage
          - prod
        default: "dev"
      buildVersion:
        description: "Build Version"
        required: true
        default: 0.0.1
      continuousIntegration:
        description: "Continuous Integration"
        required: true
        type: boolean
        default: false

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install deps
        run: npm i

      - name: Run test
        run: npm test

      - name: Build App
        run: |
          if [ ${{ github.event.inputs.buildEnvironment }} == "dev" ]; then
            echo "Will build dev build"
          elif [ ${{ github.event.inputs.buildEnvironment }} == "stage" ]; then
            echo "Will build stage build"
          elif [ ${{ github.event.inputs.buildEnvironment }} == "prod" ]; then
            echo "Will build prod build"
          else
            echo "Invalid Environment"
            exit 22
          fi

  build_container:
    if: github.event.input.continuousIntegration
    runs-on: ubuntu-latest
    needs: [build_test]

    steps:
      - name: Test T
        run: "WILL RUN CD"
      # - name: Checkout repo
      #   uses: actions/checkout@v3

      # - name: Login to container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ secrets.CONTAINER_REGISTRY }}
      #     username: ${{ secrets.REGISTRY_USR }}
      #     password: ${{ secrets.REGISTRY_PWD }}

      # - name: Build the image
      #   run: docker build -t ${{ secrets.CONTAINER_REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.APP_NAME }}:v${{ github.event.inputs.buildVersion }} -f Dockerfile .

      # - name: Push the image
      #   run: docker push ${{ secrets.CONTAINER_REGISTRY }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.APP_NAME }}:v${{ github.event.inputs.buildVersion }}
